head	1.1;
branch	1.1.1;
access;
symbols
	openblt20000517:1.1.1.3
	openblt20000429:1.1.1.3
	openblt20000428:1.1.1.3
	openblt20000427:1.1.1.3
	openblt20000426:1.1.1.3
	openblt20000425:1.1.1.3
	openblt20000424:1.1.1.3
	openblt20000423:1.1.1.3
	openblt20000422:1.1.1.3
	openblt20000421:1.1.1.3
	openblt20000420:1.1.1.3
	openblt20000419:1.1.1.3
	openblt20000418:1.1.1.3
	openblt20000417:1.1.1.3
	openblt20000416:1.1.1.3
	openblt20000415:1.1.1.3
	openblt20000414:1.1.1.3
	openblt20000413:1.1.1.3
	openblt20000412:1.1.1.3
	openblt20000411:1.1.1.3
	openblt20000410:1.1.1.3
	openblt20000409:1.1.1.3
	openblt20000408:1.1.1.3
	openblt20000407:1.1.1.3
	openblt20000406:1.1.1.3
	openblt20000405:1.1.1.3
	openblt20000404:1.1.1.3
	openblt20000403:1.1.1.3
	openblt20000402:1.1.1.3
	openblt20000401:1.1.1.3
	openblt20000331:1.1.1.3
	openblt20000330:1.1.1.3
	openblt20000329:1.1.1.3
	openblt20000328:1.1.1.3
	openblt20000327:1.1.1.3
	openblt20000326:1.1.1.3
	openblt20000325:1.1.1.3
	openblt20000324:1.1.1.3
	openblt20000323:1.1.1.3
	openblt20000322:1.1.1.3
	openblt20000321:1.1.1.3
	openblt20000320:1.1.1.3
	openblt20000319:1.1.1.3
	openblt20000318:1.1.1.3
	openblt20000317:1.1.1.3
	openblt20000316:1.1.1.3
	openblt20000315:1.1.1.3
	openblt20000314:1.1.1.3
	openblt20000313:1.1.1.3
	openblt20000312:1.1.1.3
	openblt20000311:1.1.1.3
	openblt20000310:1.1.1.3
	openblt20000309:1.1.1.3
	openblt20000308:1.1.1.3
	openblt20000307:1.1.1.3
	openblt20000306:1.1.1.3
	openblt20000305:1.1.1.3
	openblt20000304:1.1.1.3
	openblt20000303:1.1.1.3
	openblt20000302:1.1.1.3
	openblt20000301:1.1.1.3
	openblt20000229:1.1.1.3
	openblt20000228:1.1.1.3
	openblt20000227:1.1.1.3
	openblt20000226:1.1.1.3
	openblt20000225:1.1.1.3
	openblt20000224:1.1.1.3
	openblt20000223:1.1.1.3
	openblt20000222:1.1.1.3
	openblt20000221:1.1.1.3
	openblt20000220:1.1.1.3
	openblt20000219:1.1.1.3
	openblt20000218:1.1.1.3
	openblt20000217:1.1.1.3
	openblt20000216:1.1.1.3
	openblt20000215:1.1.1.3
	openblt20000214:1.1.1.3
	openblt20000213:1.1.1.3
	openblt20000212:1.1.1.3
	openblt20000211:1.1.1.3
	openblt20000210:1.1.1.3
	openblt20000209:1.1.1.3
	openblt20000208:1.1.1.3
	openblt20000207:1.1.1.3
	openblt20000206:1.1.1.3
	openblt20000205:1.1.1.3
	openblt20000204:1.1.1.3
	openblt20000203:1.1.1.3
	openblt20000202:1.1.1.3
	openblt20000201:1.1.1.3
	openblt20000131:1.1.1.3
	openblt20000130:1.1.1.3
	openblt20000129:1.1.1.3
	openblt20000128:1.1.1.3
	openblt20000127:1.1.1.3
	openblt20000126:1.1.1.3
	openblt20000125:1.1.1.3
	openblt20000124:1.1.1.3
	openblt20000123:1.1.1.3
	openblt20000122:1.1.1.3
	openblt20000121:1.1.1.3
	openblt20000120:1.1.1.3
	openblt20000119:1.1.1.3
	openblt20000118:1.1.1.3
	openblt20000117:1.1.1.2
	openblt20000116:1.1.1.2
	openblt20000115:1.1.1.2
	openblt20000114:1.1.1.2
	openblt20000113:1.1.1.2
	openblt20000112:1.1.1.2
	openblt20000111:1.1.1.2
	openblt20000110:1.1.1.2
	openblt20000109:1.1.1.2
	openblt20000108:1.1.1.2
	openblt20000107:1.1.1.2
	openblt20000106:1.1.1.2
	openblt20000105:1.1.1.2
	openblt20000104:1.1.1.2
	openblt20000103:1.1.1.2
	openblt20000102:1.1.1.2
	openblt19991228:1.1.1.1
	openBLT:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.01.20.16.31.49;	author jr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.20.16.31.49;	author jr;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.20.16.32.05;	author jr;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.01.20.16.36.41;	author jr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#
# For inclusion at the end of a makefile
#

ifeq ($(QUIET),true)
SHUSH := @@
endif

# If OBJS unspecified, convert SRCS into OBJS
#
ifeq ($(OBJS),)
OBJS := $(SRCS_TO_OBJS)
endif

DEPS := $(OBJS:.o=.d)
include $(DEPS)

ifneq ($(LIBRARY),)
$(LIBRARY): $(OBJS)
ifeq ($(QUIET),true)
	@@echo "###    Linking: $@@"
endif
	@@rm -f $(LIBRARY)
	$(SHUSH)$(AR) cr $(LIBRARY) $(OBJS) $(LIBOBJS)	
endif

ifneq ($(SHLIB),)
ifeq ($(origin SHLIB_MAJOR), undefined)
SHLIB_NAME := $(SHLIB)
SHLIB_SONAME :=
else
ifeq ($(origin SHLIB_MINOR), undefined)
SHLIB_NAME := $(SHLIB).$(SHLIB_MAJOR)
else
SHLIB_NAME := $(SHLIB).$(SHLIB_MAJOR).$(SHLIB_MINOR)
endif
SHLIB_SONAME := -soname $(SHLIB).$(SHLIB_MAJOR)
endif
$(SHLIB_NAME): $(OBJS)
ifeq ($(QUIET),true)
	@@echo "###    Linking: $@@"
endif
	$(SHUSH)$(LD) -Bshareable -o $(SHLIB_NAME) $(SHLIB_SONAME) $(OBJS) $(LIBBASE) $(LIBS)
ifneq ($(SHLIB), $(SHLIB_NAME))
	ln -sf $(SHLIB_NAME) $(SHLIB)
endif
endif

ifneq ($(BINARY),)
$(BINARY): $(OBJS)
ifeq ($(QUIET),true)
	@@echo "###    Linking: $@@"
endif
	$(SHUSH)$(LD) -dN -Ttext $(ENTRY) -o $(BINARY) $(CRT0) $(OBJS) $(LIBBASE) $(LIBS)
ifeq ($(STRIP),true)
	$(SHUSH)$(CP) $(BINARY).bin $(BINARY).debug
	$(SHUSH)$(ST) $(BINARY).bin
endif
endif

subdirs::
ifneq ($(SUBDIRS),)
ifeq ($(BUILDLOG),)
	@@for i in $(SUBDIRS) ; \
		do echo "--- Directory: $$i"; \
		$(MAKE) -C $$i ; \
	done
else
	@@for i in $(SUBDIRS) ; \
		do echo "---  Directory: $$i"; \
		export BUILDLOG=$(BUILDLOG) ; \
		if $(MAKE) -C $$i ; then \
			echo "OKAY `pwd`/$$i" >> $(BUILDLOG); \
		else \
			echo "FAIL `pwd`/$$i" >> $(BUILDLOG); \
		fi ; \
	done
endif
endif

subclean::
ifneq ($(SUBDIRS),)
	@@for i in $(SUBDIRS) ; \
		do echo "---   Cleaning: $$i"; \
		$(MAKE) -C $$i clean ; \
	done
endif

all:: check_path subdirs $(BINARY) $(LIBRARY) $(SHLIB_NAME) $(TARGETS)

clean:: check_path subclean
	@@rm -f $(OBJS) $(LIBOBJS) $(BINARY) $(LIBRARY) $(SHLIB) $(SHLIB_NAME) $(TARGETS) *.debug

realclean:: clean
	@@rm -f *.d

#############################################
# rules for compilation of individual files
#############################################
DEP_FLAGS := -M -MG $(CFLAGS)

%.o: %.cpp	
ifeq ($(QUIET),true)
	@@echo "###  Compiling: $<"
endif
	$(SHUSH)$(CC) $(CFLAGS) -c $<

%.o: %.c
ifeq ($(QUIET),true)
	@@echo "###  Compiling: $<"
endif
	$(SHUSH)$(CC) $(CFLAGS) -c $<

%.o: %.S
ifeq ($(QUIET),true)
	@@echo "### Assembling: $<"
endif
	$(SHUSH)$(CC) $(CFLAGS) -S -o $@@ $<

%.o: %.S
ifeq ($(QUIET),true)
	@@echo "### Assembling: $<"
endif
	$(SHUSH)$(CC) $(CFLAGS) -D__ASM__ -c $<

%.d: %.c
ifeq ($(QUIET),true)
	@@echo "###   MakeDeps: $<"
endif
	$(SHUSH)$(CC) $(DEP_FLAGS) $< > $@@

%.d: %.S
ifeq ($(QUIET),true)
	@@echo "###   MakeDeps: $<"
endif
	$(SHUSH)$(CC) -D__ASM__ $(DEP_FLAGS) $< > $@@

%.d: %.cpp
ifeq ($(QUIET),true)
	@@echo "###   MakeDeps: $<"
endif
	$(SHUSH)$(CC) $(DEP_FLAGS) $< > $@@

@


1.1.1.1
log
@openblt.19991228
@
text
@@


1.1.1.2
log
@openblt.20000102
@
text
@d89 1
a89 1
all:: check_path $(PRETARGETS) subdirs $(BINARY) $(LIBRARY) $(SHLIB_NAME) $(TARGETS)
d92 1
a92 1
	@@rm -f $(OBJS) $(LIBOBJS) $(BINARY) $(LIBRARY) $(SHLIB) $(SHLIB_NAME) $(PRETARGETS) $(TARGETS) *.debug *.d
d106 1
a106 1
	$(SHUSH)$(CC) $(CXXFLAGS) -c $<
@


1.1.1.3
log
@openblt.20000118
@
text
@d106 1
a106 1
	$(SHUSH)$(C++) $(CXXFLAGS) -c $<
d142 1
a142 1
	$(SHUSH)$(C++) $(DEP_FLAGS) $< > $@@
@


