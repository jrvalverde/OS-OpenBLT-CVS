head	1.1;
branch	1.1.1;
access;
symbols
	openblt20000517:1.1.1.6
	openblt20000429:1.1.1.6
	openblt20000428:1.1.1.6
	openblt20000427:1.1.1.6
	openblt20000426:1.1.1.6
	openblt20000425:1.1.1.6
	openblt20000424:1.1.1.6
	openblt20000423:1.1.1.6
	openblt20000422:1.1.1.6
	openblt20000421:1.1.1.6
	openblt20000420:1.1.1.6
	openblt20000419:1.1.1.6
	openblt20000418:1.1.1.6
	openblt20000417:1.1.1.6
	openblt20000416:1.1.1.6
	openblt20000415:1.1.1.6
	openblt20000414:1.1.1.6
	openblt20000413:1.1.1.6
	openblt20000412:1.1.1.6
	openblt20000411:1.1.1.6
	openblt20000410:1.1.1.6
	openblt20000409:1.1.1.6
	openblt20000408:1.1.1.6
	openblt20000407:1.1.1.6
	openblt20000406:1.1.1.6
	openblt20000405:1.1.1.6
	openblt20000404:1.1.1.6
	openblt20000403:1.1.1.6
	openblt20000402:1.1.1.6
	openblt20000401:1.1.1.6
	openblt20000331:1.1.1.6
	openblt20000330:1.1.1.6
	openblt20000329:1.1.1.6
	openblt20000328:1.1.1.6
	openblt20000327:1.1.1.6
	openblt20000326:1.1.1.6
	openblt20000325:1.1.1.6
	openblt20000324:1.1.1.6
	openblt20000323:1.1.1.6
	openblt20000322:1.1.1.6
	openblt20000321:1.1.1.6
	openblt20000320:1.1.1.6
	openblt20000319:1.1.1.6
	openblt20000318:1.1.1.6
	openblt20000317:1.1.1.6
	openblt20000316:1.1.1.6
	openblt20000315:1.1.1.6
	openblt20000314:1.1.1.6
	openblt20000313:1.1.1.6
	openblt20000312:1.1.1.6
	openblt20000311:1.1.1.6
	openblt20000310:1.1.1.6
	openblt20000309:1.1.1.6
	openblt20000308:1.1.1.6
	openblt20000307:1.1.1.6
	openblt20000306:1.1.1.6
	openblt20000305:1.1.1.6
	openblt20000304:1.1.1.6
	openblt20000303:1.1.1.6
	openblt20000302:1.1.1.6
	openblt20000301:1.1.1.6
	openblt20000229:1.1.1.6
	openblt20000228:1.1.1.6
	openblt20000227:1.1.1.6
	openblt20000226:1.1.1.6
	openblt20000225:1.1.1.6
	openblt20000224:1.1.1.6
	openblt20000223:1.1.1.6
	openblt20000222:1.1.1.6
	openblt20000221:1.1.1.6
	openblt20000220:1.1.1.6
	openblt20000219:1.1.1.6
	openblt20000218:1.1.1.6
	openblt20000217:1.1.1.6
	openblt20000216:1.1.1.6
	openblt20000215:1.1.1.6
	openblt20000214:1.1.1.6
	openblt20000213:1.1.1.6
	openblt20000212:1.1.1.6
	openblt20000211:1.1.1.6
	openblt20000210:1.1.1.6
	openblt20000209:1.1.1.6
	openblt20000208:1.1.1.6
	openblt20000207:1.1.1.6
	openblt20000206:1.1.1.6
	openblt20000205:1.1.1.6
	openblt20000204:1.1.1.6
	openblt20000203:1.1.1.6
	openblt20000202:1.1.1.6
	openblt20000201:1.1.1.6
	openblt20000131:1.1.1.6
	openblt20000130:1.1.1.6
	openblt20000129:1.1.1.6
	openblt20000128:1.1.1.6
	openblt20000127:1.1.1.6
	openblt20000126:1.1.1.6
	openblt20000125:1.1.1.6
	openblt20000124:1.1.1.6
	openblt20000123:1.1.1.6
	openblt20000122:1.1.1.6
	openblt20000121:1.1.1.6
	openblt20000120:1.1.1.6
	openblt20000119:1.1.1.6
	openblt20000118:1.1.1.6
	openblt20000117:1.1.1.5
	openblt20000116:1.1.1.4
	openblt20000115:1.1.1.4
	openblt20000114:1.1.1.4
	openblt20000113:1.1.1.4
	openblt20000112:1.1.1.4
	openblt20000111:1.1.1.4
	openblt20000110:1.1.1.4
	openblt20000109:1.1.1.4
	openblt20000108:1.1.1.4
	openblt20000107:1.1.1.4
	openblt20000106:1.1.1.4
	openblt20000105:1.1.1.4
	openblt20000104:1.1.1.4
	openblt20000103:1.1.1.4
	openblt20000102:1.1.1.4
	openblt19991228:1.1.1.3
	openblt19990827:1.1.1.2
	openblt082699:1.1.1.2
	openblt082599:1.1.1.2
	openblt082499:1.1.1.2
	openblt082399:1.1.1.2
	openblt082299:1.1.1.2
	openblt082199:1.1.1.2
	openblt082099:1.1.1.2
	openblt081999:1.1.1.2
	openblt081899:1.1.1.2
	openblt081799:1.1.1.2
	openblt081699:1.1.1.2
	openblt081599:1.1.1.2
	openblt071199:1.1.1.2
	openblt071099:1.1.1.1
	openblt070799:1.1.1.1
	openblt070699:1.1.1.1
	openblt070299:1.1.1.1
	openblt070199:1.1.1.1
	openblt063099:1.1.1.1
	openblt062999:1.1.1.1
	start:1.1.1.1
	openBLT:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2005.01.20.16.23.01;	author jr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.20.16.23.01;	author jr;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.20.16.29.37;	author jr;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.01.20.16.31.59;	author jr;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.01.20.16.32.18;	author jr;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2005.01.20.16.36.35;	author jr;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2005.01.20.16.36.52;	author jr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Id: //depot/blt/kernel/aspace.h#6 $
**
** Copyright 1998 Brian J. Swetland
** All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions
** are met:
** 1. Redistributions of source code must retain the above copyright
**    notice, this list of conditions, and the following disclaimer.
** 2. Redistributions in binary form must reproduce the above copyright
**    notice, this list of conditions, and the following disclaimer in the
**    documentation and/or other materials provided with the distribution.
** 3. The name of the author may not be used to endorse or promote products
**    derived from this software without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
** IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
** IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
** INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
** THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef _ASPACE_H_
#define _ASPACE_H_

#include "resource.h"

#define SEL_KCODE  (1*8)
#define SEL_KDATA  (2*8)
#define SEL_KDATA2 (3*8)
#define SEL_UCODE  (4*8)
#define SEL_UDATA  (5*8)
#define SEL_KTSS   (6*8)
#define SEL_UTSS   (7*8)

typedef struct __phys_page_t {
    struct __phys_page_t *next;
    uint32 lockcount;
    uint32 addr[6];
} phys_page_t; /* 32 bytes */

typedef struct __pagegroup_t {
    uint32 size;           /* number of pages */
    uint32 refcount;       /* number of areamaps */
    uint32 flags;          /* page info */
    anode_t *areas;        /* areas sharing this pagegroup */
    phys_page_t *pages;    /* physical pages that compose this pagegroup */
    uint32 _pad0;
    uint32 _pad1;
    uint32 _pad2;
} pagegroup_t;  /* 32 bytes */    
        
struct __area_t {
    struct __resource_t rsrc;
    struct __pagegroup_t *pgroup;
    uint32 virt_addr;
    uint32 length;        /* length in pages */
    uint32 maxlength;     /* maxlength in pages */
}; /* 32 bytes */

struct __aspace_t {
    struct __resource_t rsrc;
    anode_t *areas;       /* list of mapped areas            */
    uint32 maxvirt;       /* highest virt addr pagetabs maps */
    uint32 heap_id;       /* this area is the heap... */
        /* platform specific */
    uint32 *pdir;         /* page directory  -- 4k */
    uint32 *ptab;         /* page table      -- 4k */
    uint32 *high;         /* high page table -- 4k (0x8000000 -> ) */
#if 0
    uint32 *pagedir;      /* the page directory */
    uint32 *pagetabs[];   /* pointers to the page tables */
#endif
};


aspace_t *aspace_create(void);
void aspace_map(aspace_t *a, uint32 phys, uint32 virt,
                uint32 len, uint32 flags);
void aspace_maphi(aspace_t *a, uint32 phys, uint32 virt,
                  uint32 len, uint32 flags);
void aspace_clr(aspace_t *a, uint32 virt, uint32 len);
void aspace_print(aspace_t *a);
void aspace_protect(aspace_t *a, uint32 virt, uint32 flags);

/* userland stuff */
int area_create(aspace_t *aspace, off_t size, off_t virt, void **addr, uint32 flags);
int area_clone(aspace_t *aspace, int area_id, off_t virt, void **addr, uint32 flags);
int area_destroy(aspace_t *aspace, int area_id);
int area_resize(aspace_t *aspace, int area_id, off_t size);   


#endif
@


1.1.1.1
log
@openBLT source code
@
text
@@


1.1.1.2
log
@openblt.071199
@
text
@d1 1
a1 1
/* $Id: //depot/blt/kernel/aspace.h#7 $
d76 4
a79 1
	uint32 pdirphys;      /* physical address of page directory */
@


1.1.1.3
log
@openblt.19991228
@
text
@d1 1
a1 1
/* $Id: //depot/blt/kernel/aspace.h#9 $
a32 1
#include "list.h"
d52 1
a52 1
	list_t areas;          /* areas sharing this pagegroup */
d54 4
a57 1
} pagegroup_t;  
d60 3
a62 3
    resource_t rsrc;
    pagegroup_t *pgroup;
    uint32 virt_addr;     /* virtual PAGE address */
d65 1
a65 1
}; 
d68 2
a69 2
    resource_t rsrc;
    list_t areas;         /* list of mapped areas            */
d71 1
a80 1
void aspace_destroy(aspace_t *a);
a90 1
int area_destroy(aspace_t *aspace, int area_id);
@


1.1.1.4
log
@openblt.20000102
@
text
@d1 26
a26 2
/* Copyright 1998-1999, Brian J. Swetland. All rights reserved.
** Distributed under the terms of the OpenBLT License
@


1.1.1.5
log
@openblt.20000117
@
text
@a64 1
int area_create_uber(off_t size, void *addr);
@


1.1.1.6
log
@openblt.20000118
@
text
@d21 1
a21 1
    uint32 refcount;
@


