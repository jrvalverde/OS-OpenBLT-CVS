head	1.1;
branch	1.1.1;
access;
symbols
	openblt20000517:1.1.1.2
	openblt20000429:1.1.1.2
	openblt20000428:1.1.1.2
	openblt20000427:1.1.1.2
	openblt20000426:1.1.1.2
	openblt20000425:1.1.1.2
	openblt20000424:1.1.1.2
	openblt20000423:1.1.1.2
	openblt20000422:1.1.1.2
	openblt20000421:1.1.1.2
	openblt20000420:1.1.1.2
	openblt20000419:1.1.1.2
	openblt20000418:1.1.1.2
	openblt20000417:1.1.1.2
	openblt20000416:1.1.1.2
	openblt20000415:1.1.1.2
	openblt20000414:1.1.1.2
	openblt20000413:1.1.1.2
	openblt20000412:1.1.1.2
	openblt20000411:1.1.1.2
	openblt20000410:1.1.1.2
	openblt20000409:1.1.1.2
	openblt20000408:1.1.1.2
	openblt20000407:1.1.1.2
	openblt20000406:1.1.1.2
	openblt20000405:1.1.1.2
	openblt20000404:1.1.1.2
	openblt20000403:1.1.1.2
	openblt20000402:1.1.1.2
	openblt20000401:1.1.1.2
	openblt20000331:1.1.1.2
	openblt20000330:1.1.1.2
	openblt20000329:1.1.1.2
	openblt20000328:1.1.1.2
	openblt20000327:1.1.1.2
	openblt20000326:1.1.1.2
	openblt20000325:1.1.1.2
	openblt20000324:1.1.1.2
	openblt20000323:1.1.1.2
	openblt20000322:1.1.1.2
	openblt20000321:1.1.1.2
	openblt20000320:1.1.1.2
	openblt20000319:1.1.1.2
	openblt20000318:1.1.1.2
	openblt20000317:1.1.1.2
	openblt20000316:1.1.1.2
	openblt20000315:1.1.1.2
	openblt20000314:1.1.1.2
	openblt20000313:1.1.1.2
	openblt20000312:1.1.1.2
	openblt20000311:1.1.1.2
	openblt20000310:1.1.1.2
	openblt20000309:1.1.1.2
	openblt20000308:1.1.1.2
	openblt20000307:1.1.1.2
	openblt20000306:1.1.1.2
	openblt20000305:1.1.1.2
	openblt20000304:1.1.1.2
	openblt20000303:1.1.1.2
	openblt20000302:1.1.1.2
	openblt20000301:1.1.1.2
	openblt20000229:1.1.1.2
	openblt20000228:1.1.1.2
	openblt20000227:1.1.1.2
	openblt20000226:1.1.1.2
	openblt20000225:1.1.1.2
	openblt20000224:1.1.1.2
	openblt20000223:1.1.1.2
	openblt20000222:1.1.1.2
	openblt20000221:1.1.1.2
	openblt20000220:1.1.1.2
	openblt20000219:1.1.1.2
	openblt20000218:1.1.1.2
	openblt20000217:1.1.1.2
	openblt20000216:1.1.1.2
	openblt20000215:1.1.1.2
	openblt20000214:1.1.1.2
	openblt20000213:1.1.1.2
	openblt20000212:1.1.1.2
	openblt20000211:1.1.1.2
	openblt20000210:1.1.1.2
	openblt20000209:1.1.1.2
	openblt20000208:1.1.1.2
	openblt20000207:1.1.1.2
	openblt20000206:1.1.1.2
	openblt20000205:1.1.1.2
	openblt20000204:1.1.1.2
	openblt20000203:1.1.1.2
	openblt20000202:1.1.1.2
	openblt20000201:1.1.1.2
	openblt20000131:1.1.1.2
	openblt20000130:1.1.1.2
	openblt20000129:1.1.1.2
	openblt20000128:1.1.1.2
	openblt20000127:1.1.1.2
	openblt20000126:1.1.1.2
	openblt20000125:1.1.1.2
	openblt20000124:1.1.1.2
	openblt20000123:1.1.1.2
	openblt20000122:1.1.1.2
	openblt20000121:1.1.1.2
	openblt20000120:1.1.1.2
	openblt20000119:1.1.1.2
	openblt20000118:1.1.1.2
	openblt20000117:1.1.1.1
	openblt20000116:1.1.1.1
	openblt20000115:1.1.1.1
	openblt20000114:1.1.1.1
	openblt20000113:1.1.1.1
	openblt20000112:1.1.1.1
	openblt20000111:1.1.1.1
	openblt20000110:1.1.1.1
	openblt20000109:1.1.1.1
	openblt20000108:1.1.1.1
	openblt20000107:1.1.1.1
	openblt20000106:1.1.1.1
	openblt20000105:1.1.1.1
	openblt20000104:1.1.1.1
	openblt20000103:1.1.1.1
	openblt20000102:1.1.1.1
	openblt19991228:1.1.1.1
	openblt19990827:1.1.1.1
	openblt082699:1.1.1.1
	openblt082599:1.1.1.1
	openblt082499:1.1.1.1
	openblt082399:1.1.1.1
	openblt082299:1.1.1.1
	openblt082199:1.1.1.1
	openblt082099:1.1.1.1
	openblt081999:1.1.1.1
	openblt081899:1.1.1.1
	openblt081799:1.1.1.1
	openblt081699:1.1.1.1
	openblt081599:1.1.1.1
	openblt071199:1.1.1.1
	openblt071099:1.1.1.1
	openblt070799:1.1.1.1
	openblt070699:1.1.1.1
	openblt070299:1.1.1.1
	openblt070199:1.1.1.1
	openblt063099:1.1.1.1
	openblt062999:1.1.1.1
	start:1.1.1.1
	openBLT:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.01.20.16.23.01;	author jr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.20.16.23.01;	author jr;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.20.16.36.52;	author jr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Id: //depot/blt/kernel/trampoline.S#1 $
**
** Copyright 1998 Sidney Cammeresi
** All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions
** are met:
** 1. Redistributions of source code must retain the above copyright
**    notice, this list of conditions, and the following disclaimer.
** 2. Redistributions in binary form must reproduce the above copyright
**    notice, this list of conditions, and the following disclaimer in the
**    documentation and/or other materials provided with the distribution.
** 3. The name of the author may not be used to endorse or promote products
**    derived from this software without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
** IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
** IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
** INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
** THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*
 * This is the initial bootstrap code for the application processors.  When
 * we get here, we are running on the AP in 16-bit real mode with a stack
 * allocated at 0x1000 * my_cpu_num by the kernel which we are not set up
 * to use yet.  Our text is at the bottom of this stack.  We have to be
 * careful until things are fixed up.
 *
 * Basically, we just set protected mode with a temporary GDT, and call
 * C code.  The IDT and paging are set up later since we can't reference
 * any global variable here declared outside this file.
 *
 * Memory map at this stage is
 *
 *     0x9000  location of our stack
 *     0x9004  null descriptor
 *     0x9008
 *     0x900c  kernel text descriptor
 *     0x9010
 *     0x9014  kernel data descriptor
 *     0x9018
 *     0x901c  gdt limit << 16
 *     0x9020  gdt base
 *     0x9024  address of page directory
 */

.globl trampoline
.globl trampoline_end
.globl flush

.code16
trampoline:
		cli                      # paranoia
		xor %ax, %ax
		mov %ax, %ds
		mov %ax, %ss

		movl $0x9000, %eax       # find the location of our stack
		mov (%eax), %ebx

		xor %eax, %eax
		mov %ax, %ss
		add $0x1000, %ebx
		mov %bx, %sp

		movl $0x18, %eax         # i[0] = limit << 16; (limit is 24 dec.)
		movl $0x10, %ecx
		shl %cl, %eax
		mov $0x901c, %ebx
		mov %eax, (%ebx)
		mov $0x9004, %eax        # i[1] = base; (base = 0x9004)
		mov %eax, 4(%ebx)
		mov $0x901e, %eax
		lgdt (%eax)

		movl $0x9024, %eax
		mov (%eax), %eax
		mov %eax, %cr3

		movl $0x80000001, %eax   # turn on paging and protected mode
		mov %eax, %cr0

		/*
		 * Do a long jump to the kernel text segment to serialise the processor.
		 * A jump to flush won't work since we are being linked to run at a
		 * different address, so we calculate the offset in the segment ourselves.
		 */
		ljmp $0x8, $(0x1000 + flush - trampoline)

.code32
flush:
		mov $0x10, %ax
		mov %ax, %ds
		mov %ax, %es
		mov %ax, %fs
		mov %ax, %gs
		mov %ax, %ss

		mov $0x66, %ax
		mov $0x1000, %dx
		mov %eax, (%edx)
		cld                      # supposedly good for gcc > 2
		movl $0x80000074, %eax   # jmp _start does not work for some reason
		jmp *%eax

trampoline_end:

@


1.1.1.1
log
@openBLT source code
@
text
@@


1.1.1.2
log
@openblt.20000118
@
text
@d1 1
a1 1
/* $Id: //depot/blt/kernel/trampoline.S#2 $
d3 24
a26 2
** Copyright 1998 Sidney Cammeresi.  All rights reserved.
** Distributed under the terms of the OpenBLT License.
@

