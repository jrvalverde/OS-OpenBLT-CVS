head	1.1;
branch	1.1.1;
access;
symbols
	openblt20000517:1.1.1.6
	openblt20000429:1.1.1.5
	openblt20000428:1.1.1.5
	openblt20000427:1.1.1.5
	openblt20000426:1.1.1.5
	openblt20000425:1.1.1.5
	openblt20000424:1.1.1.5
	openblt20000423:1.1.1.5
	openblt20000422:1.1.1.5
	openblt20000421:1.1.1.5
	openblt20000420:1.1.1.5
	openblt20000419:1.1.1.5
	openblt20000418:1.1.1.5
	openblt20000417:1.1.1.5
	openblt20000416:1.1.1.5
	openblt20000415:1.1.1.5
	openblt20000414:1.1.1.5
	openblt20000413:1.1.1.5
	openblt20000412:1.1.1.5
	openblt20000411:1.1.1.5
	openblt20000410:1.1.1.5
	openblt20000409:1.1.1.5
	openblt20000408:1.1.1.5
	openblt20000407:1.1.1.5
	openblt20000406:1.1.1.5
	openblt20000405:1.1.1.5
	openblt20000404:1.1.1.5
	openblt20000403:1.1.1.5
	openblt20000402:1.1.1.5
	openblt20000401:1.1.1.5
	openblt20000331:1.1.1.5
	openblt20000330:1.1.1.5
	openblt20000329:1.1.1.5
	openblt20000328:1.1.1.5
	openblt20000327:1.1.1.5
	openblt20000326:1.1.1.5
	openblt20000325:1.1.1.5
	openblt20000324:1.1.1.5
	openblt20000323:1.1.1.5
	openblt20000322:1.1.1.5
	openblt20000321:1.1.1.5
	openblt20000320:1.1.1.5
	openblt20000319:1.1.1.5
	openblt20000318:1.1.1.5
	openblt20000317:1.1.1.5
	openblt20000316:1.1.1.5
	openblt20000315:1.1.1.5
	openblt20000314:1.1.1.5
	openblt20000313:1.1.1.5
	openblt20000312:1.1.1.5
	openblt20000311:1.1.1.5
	openblt20000310:1.1.1.5
	openblt20000309:1.1.1.5
	openblt20000308:1.1.1.5
	openblt20000307:1.1.1.5
	openblt20000306:1.1.1.5
	openblt20000305:1.1.1.5
	openblt20000304:1.1.1.5
	openblt20000303:1.1.1.5
	openblt20000302:1.1.1.5
	openblt20000301:1.1.1.5
	openblt20000229:1.1.1.5
	openblt20000228:1.1.1.5
	openblt20000227:1.1.1.5
	openblt20000226:1.1.1.5
	openblt20000225:1.1.1.5
	openblt20000224:1.1.1.5
	openblt20000223:1.1.1.5
	openblt20000222:1.1.1.5
	openblt20000221:1.1.1.5
	openblt20000220:1.1.1.5
	openblt20000219:1.1.1.5
	openblt20000218:1.1.1.5
	openblt20000217:1.1.1.5
	openblt20000216:1.1.1.5
	openblt20000215:1.1.1.5
	openblt20000214:1.1.1.5
	openblt20000213:1.1.1.5
	openblt20000212:1.1.1.5
	openblt20000211:1.1.1.5
	openblt20000210:1.1.1.5
	openblt20000209:1.1.1.5
	openblt20000208:1.1.1.5
	openblt20000207:1.1.1.5
	openblt20000206:1.1.1.5
	openblt20000205:1.1.1.5
	openblt20000204:1.1.1.5
	openblt20000203:1.1.1.5
	openblt20000202:1.1.1.5
	openblt20000201:1.1.1.5
	openblt20000131:1.1.1.5
	openblt20000130:1.1.1.5
	openblt20000129:1.1.1.5
	openblt20000128:1.1.1.5
	openblt20000127:1.1.1.5
	openblt20000126:1.1.1.5
	openblt20000125:1.1.1.5
	openblt20000124:1.1.1.5
	openblt20000123:1.1.1.5
	openblt20000122:1.1.1.5
	openblt20000121:1.1.1.5
	openblt20000120:1.1.1.5
	openblt20000119:1.1.1.5
	openblt20000118:1.1.1.5
	openblt20000117:1.1.1.5
	openblt20000116:1.1.1.5
	openblt20000115:1.1.1.5
	openblt20000114:1.1.1.5
	openblt20000113:1.1.1.5
	openblt20000112:1.1.1.5
	openblt20000111:1.1.1.5
	openblt20000110:1.1.1.5
	openblt20000109:1.1.1.5
	openblt20000108:1.1.1.5
	openblt20000107:1.1.1.5
	openblt20000106:1.1.1.5
	openblt20000105:1.1.1.5
	openblt20000104:1.1.1.5
	openblt20000103:1.1.1.5
	openblt20000102:1.1.1.5
	openblt19991228:1.1.1.5
	openblt19990827:1.1.1.4
	openblt082699:1.1.1.4
	openblt082599:1.1.1.4
	openblt082499:1.1.1.4
	openblt082399:1.1.1.4
	openblt082299:1.1.1.4
	openblt082199:1.1.1.4
	openblt082099:1.1.1.4
	openblt081999:1.1.1.4
	openblt081899:1.1.1.4
	openblt081799:1.1.1.4
	openblt081699:1.1.1.4
	openblt081599:1.1.1.4
	openblt071199:1.1.1.4
	openblt071099:1.1.1.3
	openblt070799:1.1.1.3
	openblt070699:1.1.1.2
	openblt070299:1.1.1.2
	openblt070199:1.1.1.1
	openblt063099:1.1.1.1
	openblt062999:1.1.1.1
	start:1.1.1.1
	openBLT:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2005.01.20.16.22.59;	author jr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.20.16.22.59;	author jr;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.20.16.28.45;	author jr;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.01.20.16.29.12;	author jr;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.01.20.16.29.31;	author jr;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2005.01.20.16.31.49;	author jr;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2005.01.20.17.11.08;	author jr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Id: //depot/blt/bin/bltsh/bltsh.c#4 $
**
** Copyright 1999 Sidney Cammeresi
** All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions
** are met:
** 1. Redistributions of source code must retain the above copyright
**    notice, this list of conditions, and the following disclaimer.
** 2. Redistributions in binary form must reproduce the above copyright
**    notice, this list of conditions, and the following disclaimer in the
**    documentation and/or other materials provided with the distribution.
** 3. The name of the author may not be used to endorse or promote products
**    derived from this software without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
** IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
** IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
** INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
** THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>

const static char *copyright = "\
OpenBLT Release I (built " __DATE__ ", " __TIME__ ")
    Copyright (c) 1998-1999 The OpenBLT Dev Team.  All rights reserved.
";

char **params;

void run (void)
{
	extern char _end[], __bss_start[];

    __libc_init_console ();
    __libc_init_vfs ();
    execve (params[0], params, NULL);
	if ((errno == ENOENT) || (errno == ENOTDIR) || (errno == ENOSYS))
		printf ("bltsh: no such file or directory: %s\n", params[0]);
	else
    	printf ("execve failed %d\n", errno);
    os_terminate (1);
}

int main (void)
{
	char line[256], *c;
	int fd, len, space, i, p_argc;

	__libc_init_console ();
	__libc_init_vfs ();
	__libc_init_console_input ();

	//printf ("\n\n%s\n", copyright);

	for (;;)
	{
		printf ("$ ");

		*line = len = 0;
		while (read (0, line + len++, 1) > 0)
		{
			if ((line[len - 1] == 8) && (len > 1)) /* BS */
				len -= 2;
			else if (line[len - 1] == '\n')
			{
				line[len-- - 1] = 0;
				for (i = space = 0, p_argc = 2; i < len; i++)
					if ((line[i] == ' ') && !space)
						space = 1;
					else if ((line[i] != ' ') && space)
					{
						p_argc++;
						space = 0;
					}
				if ((*line != '#') && *line)
				{
					params = malloc (sizeof (char *) * p_argc);
/*
					params[0] = malloc (strlen (line) + 1);
					strcpy (params[0], line);
					params[1] = NULL;
*/
					c = line;
					for (i = 0; i < p_argc - 1; i++)
					{
						for (len = 0; c[len] && (c[len] != ' '); len++) ;
						params[i] = malloc (len + 1);
						strlcpy (params[i], c, len + 1);
						c += len + 1;
					}
					params[p_argc - 1] = NULL;
					if (!strcmp (params[0], "exit"))
						os_terminate (1);
					thr_join (thr_detach (run), 0);
				}
				len = 0;
				break;
			}
		}
	}

	return 0;
}

@


1.1.1.1
log
@openBLT source code
@
text
@@


1.1.1.2
log
@openblt.070299
@
text
@d1 1
a1 1
/* $Id: //depot/blt/bin/bltsh/bltsh.c#6 $
a32 2
#include <unistd.h>
#include <sys/stat.h>
d41 1
a41 1
void run(void)
d48 4
a51 2
	//printf ("execve failed %d\n", errno);
	printf ("bltsh: %s: %s\n", params[0], strerror (errno));
a54 25
void do_command(int argc, char **argv)
{
	struct stat s;
	
	if(!strcmp(argv[0], "exit")) os_terminate (1);
	
	if(!stat(argv[0],&s)){
		thr_join (thr_detach (run), 0);
	} else {
		/* try our "path" */
		char *x = (char *) malloc(7 + strlen(argv[0]));
		
		strcpy(x,"/boot/");
		strcpy(x+6,argv[0]);
		free(argv[0]);
		argv[0] = x;
		
		if(!stat(x,&s)){
			thr_join (thr_detach (run), 0);
		} else {
			printf("bltsh: no such file or directory: %s\n", argv[0]);
		}
	}	
}

d64 2
d89 5
d103 3
a105 6
					
					do_command(p_argc, params);
					
					for(i=0;i<p_argc;i++)
						free(params[i]);
					free(params);
@


1.1.1.3
log
@openblt.070799
@
text
@d1 1
a1 1
/* $Id: //depot/blt/bin/bltsh/bltsh.c#8 $
d50 1
a84 1
	__libc_init_fdl ();
a87 1
	printf ("\n");
@


1.1.1.4
log
@openblt.071199
@
text
@d1 1
a1 1
/* $Id: //depot/blt/bin/bltsh/bltsh.c#10 $
a56 1
	int thid;
d61 1
a61 5
		if((thid = execve(argv[0],argv,NULL)) > 0){
			thr_wait(thid);
		} else {
			printf("bltsh: failed to execve(): %s\n", argv[0]);
		}	
d72 1
a72 5
			if((thid = execve(argv[0],argv,NULL)) > 0){
				thr_wait(thid);
			} else {
				printf("bltsh: failed to execve(): %s\n", argv[0]);
			}
@


1.1.1.5
log
@openblt.19991228
@
text
@d1 1
a1 1
/* $Id: //depot/blt/bin/bltsh/bltsh.c#11 $
d35 5
a39 1
#include <blt/syscall.h>
d42 11
a52 1
void __libc_init_console_input (void);
d91 1
a91 1
	int len, space, i, p_argc;
d93 3
@


1.1.1.6
log
@openblt.20000517
@
text
@d1 1
a1 1
/* $Id: //depot/blt/bin/bltsh/bltsh.c#12 $
a36 1
void grab_console(void);
a49 1
			grab_console();
a64 1
				grab_console();
@


