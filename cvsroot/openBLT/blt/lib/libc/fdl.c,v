head	1.1;
branch	1.1.1;
access;
symbols
	openblt20000517:1.1.1.4
	openblt20000429:1.1.1.4
	openblt20000428:1.1.1.4
	openblt20000427:1.1.1.4
	openblt20000426:1.1.1.4
	openblt20000425:1.1.1.4
	openblt20000424:1.1.1.4
	openblt20000423:1.1.1.4
	openblt20000422:1.1.1.4
	openblt20000421:1.1.1.4
	openblt20000420:1.1.1.4
	openblt20000419:1.1.1.4
	openblt20000418:1.1.1.4
	openblt20000417:1.1.1.4
	openblt20000416:1.1.1.4
	openblt20000415:1.1.1.4
	openblt20000414:1.1.1.4
	openblt20000413:1.1.1.4
	openblt20000412:1.1.1.4
	openblt20000411:1.1.1.4
	openblt20000410:1.1.1.4
	openblt20000409:1.1.1.4
	openblt20000408:1.1.1.4
	openblt20000407:1.1.1.4
	openblt20000406:1.1.1.4
	openblt20000405:1.1.1.4
	openblt20000404:1.1.1.4
	openblt20000403:1.1.1.4
	openblt20000402:1.1.1.4
	openblt20000401:1.1.1.4
	openblt20000331:1.1.1.4
	openblt20000330:1.1.1.4
	openblt20000329:1.1.1.4
	openblt20000328:1.1.1.4
	openblt20000327:1.1.1.4
	openblt20000326:1.1.1.4
	openblt20000325:1.1.1.4
	openblt20000324:1.1.1.4
	openblt20000323:1.1.1.4
	openblt20000322:1.1.1.4
	openblt20000321:1.1.1.4
	openblt20000320:1.1.1.4
	openblt20000319:1.1.1.4
	openblt20000318:1.1.1.4
	openblt20000317:1.1.1.4
	openblt20000316:1.1.1.4
	openblt20000315:1.1.1.4
	openblt20000314:1.1.1.4
	openblt20000313:1.1.1.4
	openblt20000312:1.1.1.4
	openblt20000311:1.1.1.4
	openblt20000310:1.1.1.4
	openblt20000309:1.1.1.4
	openblt20000308:1.1.1.4
	openblt20000307:1.1.1.4
	openblt20000306:1.1.1.4
	openblt20000305:1.1.1.4
	openblt20000304:1.1.1.4
	openblt20000303:1.1.1.4
	openblt20000302:1.1.1.4
	openblt20000301:1.1.1.4
	openblt20000229:1.1.1.4
	openblt20000228:1.1.1.4
	openblt20000227:1.1.1.4
	openblt20000226:1.1.1.4
	openblt20000225:1.1.1.4
	openblt20000224:1.1.1.4
	openblt20000223:1.1.1.4
	openblt20000222:1.1.1.4
	openblt20000221:1.1.1.4
	openblt20000220:1.1.1.4
	openblt20000219:1.1.1.4
	openblt20000218:1.1.1.4
	openblt20000217:1.1.1.4
	openblt20000216:1.1.1.4
	openblt20000215:1.1.1.4
	openblt20000214:1.1.1.4
	openblt20000213:1.1.1.4
	openblt20000212:1.1.1.4
	openblt20000211:1.1.1.4
	openblt20000210:1.1.1.4
	openblt20000209:1.1.1.4
	openblt20000208:1.1.1.4
	openblt20000207:1.1.1.4
	openblt20000206:1.1.1.4
	openblt20000205:1.1.1.4
	openblt20000204:1.1.1.4
	openblt20000203:1.1.1.4
	openblt20000202:1.1.1.4
	openblt20000201:1.1.1.4
	openblt20000131:1.1.1.4
	openblt20000130:1.1.1.4
	openblt20000129:1.1.1.4
	openblt20000128:1.1.1.4
	openblt20000127:1.1.1.4
	openblt20000126:1.1.1.4
	openblt20000125:1.1.1.4
	openblt20000124:1.1.1.4
	openblt20000123:1.1.1.4
	openblt20000122:1.1.1.4
	openblt20000121:1.1.1.4
	openblt20000120:1.1.1.4
	openblt20000119:1.1.1.4
	openblt20000118:1.1.1.4
	openblt20000117:1.1.1.4
	openblt20000116:1.1.1.4
	openblt20000115:1.1.1.4
	openblt20000114:1.1.1.4
	openblt20000113:1.1.1.4
	openblt20000112:1.1.1.4
	openblt20000111:1.1.1.4
	openblt20000110:1.1.1.4
	openblt20000109:1.1.1.4
	openblt20000108:1.1.1.4
	openblt20000107:1.1.1.4
	openblt20000106:1.1.1.4
	openblt20000105:1.1.1.4
	openblt20000104:1.1.1.4
	openblt20000103:1.1.1.4
	openblt20000102:1.1.1.4
	openblt19991228:1.1.1.4
	openblt19990827:1.1.1.3
	openblt082699:1.1.1.3
	openblt082599:1.1.1.3
	openblt082499:1.1.1.3
	openblt082399:1.1.1.3
	openblt082299:1.1.1.3
	openblt082199:1.1.1.3
	openblt082099:1.1.1.3
	openblt081999:1.1.1.3
	openblt081899:1.1.1.3
	openblt081799:1.1.1.3
	openblt081699:1.1.1.3
	openblt081599:1.1.1.3
	openblt071199:1.1.1.3
	openblt071099:1.1.1.2
	openblt070799:1.1.1.2
	openblt070699:1.1.1.1
	openblt070299:1.1.1.1
	openblt070199:1.1.1.1
	openblt063099:1.1.1.1
	openblt062999:1.1.1.1
	start:1.1.1.1
	openBLT:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2005.01.20.16.22.59;	author jr;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.01.20.16.22.59;	author jr;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.20.16.29.12;	author jr;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.01.20.16.29.32;	author jr;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.01.20.16.31.50;	author jr;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* $Id: //depot/blt/lib/libc/fdl.c#3 $
**
** Copyright 1999 Sidney Cammeresi
** All rights reserved.
**
** Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions
** are met:
** 1. Redistributions of source code must retain the above copyright
**    notice, this list of conditions, and the following disclaimer.
** 2. Redistributions in binary form must reproduce the above copyright
**    notice, this list of conditions, and the following disclaimer in the
**    documentation and/or other materials provided with the distribution.
** 3. The name of the author may not be used to endorse or promote products
**    derived from this software without specific prior written permission.
**
** THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
** IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
** OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
** IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
** INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
** THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include <stdlib.h>
#include <errno.h>
#include <unistd.h>
#include <sys/ioctl.h>
#include <blt/qsem.h>
#include <blt/libsyms.h>
#include <blt/fdl.h>

static __filedesc **fd_table;
static qsem_t *fd_table_lock;

weak_alias (_read, read)
weak_alias (_write, write)
weak_alias (_ioctl, ioctl)
weak_alias (_close, close)

void _init (void)
{
	int i;

	fd_table = malloc (sizeof (__filedesc *) * MAX_FDS);
	for (i = 0; i < MAX_FDS; i++)
		fd_table[i] = NULL;
	fd_table_lock = qsem_create (1);
}

void _fini (void)
{
	free (fd_table);
	qsem_destroy (fd_table_lock);
}

int _fdl_alloc_descriptor (fdl_type *handler, void *cookie)
{
	int i;

	qsem_acquire (fd_table_lock);
	for (i = 0; i < MAX_FDS; i++)
		if (fd_table[i] == NULL)
		{
			fd_table[i] = malloc (sizeof (__filedesc));
			fd_table[i]->imp = handler;
			fd_table[i]->cookie = cookie;
			qsem_release (fd_table_lock);
			return i;
		}
	qsem_release (fd_table_lock);
	return -1;
}

int _fdl_free_descriptor (int desc)
{
	fd_table[desc] = NULL;
}

ssize_t _read (int fd, void *buf, size_t count)
{
	if (fd_table[fd]->imp->read != NULL)
		return fd_table[fd]->imp->read (fd_table[fd]->cookie, buf, count);
	else
	{
		errno = ENOSYS;
		return -1;
	}
}

ssize_t _write (int fd, const void *buf, size_t count)
{
	if (fd_table[fd]->imp->write != NULL)
		return fd_table[fd]->imp->write (fd_table[fd]->cookie, buf, count);
	else
	{
		errno = ENOSYS;
		return -1;
	}
}

int _ioctl (int fd, unsigned long request, char *argp)
{
	if (fd_table[fd]->imp->ioctl != NULL)
		return fd_table[fd]->imp->ioctl (fd_table[fd]->cookie, request, argp);
	else
	{
		errno = ENOSYS;
		return -1;
	}
}

int _close (int fd)
{
	if (fd_table[fd]->imp->close != NULL)
	{
		fd_table[fd] = NULL;
		return fd_table[fd]->imp->close (fd_table[fd]->cookie);
	}
	else
	{
		errno = ENOSYS;
		return -1;
	}
}

@


1.1.1.1
log
@openBLT source code
@
text
@@


1.1.1.2
log
@openblt.070799
@
text
@d1 1
a1 1
/* $Id: //depot/blt/lib/libc/fdl.c#4 $
d45 1
a45 1
void __libc_init_fdl (void)
d55 1
a55 1
void __libc_fini_fdl (void)
@


1.1.1.3
log
@openblt.071199
@
text
@d1 1
a1 1
/* $Id: //depot/blt/lib/libc/fdl.c#5 $
d79 1
a79 1
void _fdl_free_descriptor (int desc)
@


1.1.1.4
log
@openblt.19991228
@
text
@d1 1
a1 1
/* $Id: //depot/blt/lib/libc/fdl.c#7 $
a118 2
	int res;

a120 1
		res = fd_table[fd]->imp->close (fd_table[fd]->cookie);
d122 1
a122 1
		return res;
@


